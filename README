= z1HttpBLPlugin =

== Overview ==

The HTTP Blacklist, or "http:BL", is a system that allows website administrators to take advantage of the data generated by Project Honey Pot in order to keep suspicious and malicious web robots off their sites. Project Honey Pot tracks harvesters, comment spammers, and other suspicious visitors to websites. Http:BL makes this data available to any member of Project Honey Pot in an easy and efficient way.

Http:BL provides data back about the IP addresses of visitors to your website. Data is exchanged over the DNS system. You may query your local DNS server and receive a response back that indicates the type of visitor to your site, how threatening that visitor is, and how long it has been since the visitor has last been seen within the Project Honey Pot trap network.

You find more informarion on official project-site: http://www.projecthoneypot.org/

== Installation ==

To install z1HttpBLPlugin:

pear method
{{{
symfony plugin-install local|global symfony/z1HttpBLPlugin
}}}
or get a svn checkout
{{{
svn co http://svn.symfony-project.com/plugins/z1HttpBLPlugin /your/plugin/dir
}}}

go to http://www.projecthoneypot.org/
register a free account, request access-key for blacklist-server
customize your app.yml with values, like access key, and banned link
that's it

== Usage ==

your can use a filter, simply add z1HttpBLFilter to your filters.yml
or your can use classes in your way, like:
{{{
<?php

z1HttpBL::configure(sfConfig::get('app_httpbl_access_key'), sfConfig::get('app_httpbl_dns_host'));
$httpBL_result = z1HttpBL::checkIp($_SERVER['REMOTE_ADDR']);

$max_age = sfConfig::get('app_httpbl_max_age');
$min_score = sfConfig::get('app_httpbl_min_score');
$min_type = sfConfig::get('app_httpbl_min_type');

// optional, only if you would like to use isBadGuy()-method
$httpBL_result->configure($max_age, $min_score, $min_type);

if ($httpBL->isBadGuy()===true) {
  // your code here for bad guy
}

/* or do this check manually like this */
if ($httpBL_result->getLastActivity()<=$max_age && // if last activity less then maximum
    $httpBL_result->getScore()>=$min_score && // if score is more then minimum
    $httpBL_result->getType()>=$min_type) { // and type is bigger then minimum
  // your code here for bad guy
}

?>
}}}


== License ==

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.